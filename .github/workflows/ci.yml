name: CI

on: [push]

jobs:
  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Push to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: root
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            echo "=== Début du déploiement ==="

            # Vérification et correction de la configuration Nginx
            echo "Configuration Nginx :"
            cat > /etc/nginx/sites-available/tarek-aziz.alassani.angers.mds-project.fr << 'EOL'
            server {
                listen 80;
                server_name tarek-aziz.alassani.angers.mds-project.fr;
                root /var/www/html/Portofolio;

                access_log  /var/log/nginx/tarek-aziz.alassani.angers.mds-project.fr.access.log;
                error_log  /var/log/nginx/tarek-aziz.alassani.angers.mds-project.fr.error.log;

                fastcgi_buffers 16 16k;
                fastcgi_buffer_size 32k;

                add_header X-Frame-Options "SAMEORIGIN";
                add_header X-XSS-Protection "1; mode=block";
                add_header X-Content-Type-Options "nosniff";

                index index.php index.htm;

                location / {
                    try_files $uri $uri/ /index.php?$query_string;
                }

                location ~ \.php$ {
                    include snippets/fastcgi-php.conf;
                    fastcgi_pass unix:/var/run/php/php8.2-fpm.sock;
                    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                    include fastcgi_params;
                }

                location ~ /\.(?!well-known).* {
                    deny all;
                }
            }
            EOL

            # Création du lien symbolique si nécessaire
            ln -sf /etc/nginx/sites-available/tarek-aziz.alassani.angers.mds-project.fr /etc/nginx/sites-enabled/

            # Vérification du répertoire root
            ROOT_DIR="/var/www/html/Portofolio"
            echo "Répertoire root : $ROOT_DIR"

            # Création du répertoire s'il n'existe pas
            mkdir -p $ROOT_DIR

            # Vérification de l'état actuel
            echo "État actuel du répertoire :"
            ls -la $ROOT_DIR

            # Configuration des permissions
            echo "Configuration des permissions..."
            chown -R www-data:www-data $ROOT_DIR
            chmod -R 775 $ROOT_DIR

            # Configuration de Git
            echo "Configuration de Git..."
            git config --global --add safe.directory $ROOT_DIR
            git config --global --list

            # Mise à jour du code
            echo "Mise à jour du code..."
            cd $ROOT_DIR

            # Forcer la mise à jour
            echo "Forçage de la mise à jour..."
            git fetch origin
            git reset --hard origin/main
            git clean -fd
            git pull origin main

            # Configuration finale des permissions
            echo "Configuration finale des permissions..."
            find $ROOT_DIR -type d -exec chmod 775 {} \;
            find $ROOT_DIR -type f -exec chmod 664 {} \;
            chmod -R g+s $ROOT_DIR

            # Vérification finale
            echo "=== Vérification finale ==="
            echo "Contenu du répertoire :"
            ls -la $ROOT_DIR
            echo "Derniers commits :"
            git log -n 3 --oneline

            # Vérification des fichiers PHP
            echo "Vérification des fichiers PHP :"
            ls -la $ROOT_DIR/*.php

            # Vérification des permissions
            echo "Vérification des permissions :"
            ls -la $ROOT_DIR
            ls -la $ROOT_DIR/css
            ls -la $ROOT_DIR/img

            # Vérification de la configuration Nginx
            echo "Vérification de la configuration Nginx :"
            nginx -t

            # Redémarrage de Nginx si nécessaire
            if [ $? -eq 0 ]; then
              echo "Redémarrage de Nginx..."
              systemctl restart nginx
            fi

            # Vérification du statut de Nginx
            echo "Statut de Nginx :"
            systemctl status nginx

            # Vérification des logs Nginx
            echo "Dernières lignes des logs Nginx :"
            tail -n 20 /var/log/nginx/error.log

            echo "=== Fin du déploiement ==="
